npm init
export NODE_ENV=development && gulp && node ./app.js
export NODE_ENV=production && gulp && node ./app.js

npm install eslint --save-dev
./node_modules/.bin/eslint --init

npm install gulp require-dir del gulp-sass gulp-uglify --save-dev
npm install jquery popper.js bootstrap font-awesome --save
npm run gulp clean-log
npm run gulp copy-images
npm run gulp copy-javascripts
npm run gulp copy-third_party
npm run gulp compile-sass
npm run build-prod
npm run gulp minify-javascripts


npm install express ejs --save
https://getbootstrap.com/docs/4.4/examples/starter-template/


npm install log4js --save


npm install mongodb --save
sudo service mongod start
mongo
use weblog
db.createUser({user: "user", pwd:"user", roles: [{role: "readWrite", db: "weblog"}]})
db.auth("user", "user")
node ./lib/database/insert-sample.js 
show collections
db.posts.find()
db.privileges.find()
db.users.find()


npm install ejs --save


npm run build-dev


npm install body-parser --save


npm run build-dev


npm install csrf --save
npm install express-session --save
npm install cookie-parser --save


npm run build-dev


npm install passport --save
npm install passport-local --save
npm install connect-flash --save


mongo
use weblog
db.auth("user", "user")
db.users.find()
db.users.update({email: "yuta.sato@sample.com"}, {$set: {role: "default"}})
db.users.find()
db.users.update({email: "yuta.sato@sample.com"}, {$set: {role: "owner"}})


https://getbootstrap.com/docs/4.4/examples/starter-template/


mongo
use weblog
db.auth("user", "user")
db.users.find()
db.users.update({email: "yuta.sato@sample.com"}, {$set: {password: "77d1fb804f4e1e6059377122046c95de5e567cb9fd374639cb96e7f5cc07dba1"}})
db.users.find()


curl --verbose http://127.0.0.1:3000