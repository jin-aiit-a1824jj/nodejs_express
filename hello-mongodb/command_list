npm init
npm install mongodb --save
sudo service mongod start

mongo
use sample
show collections
db.test.find()

show collections
db.products.find()

use admin
db.createUser({
  user: "admin",
  pwd: "password",
  roles: [{role: "userAdminAnyDatabase", db: "admin"}]
})
db.system.users.find()


***.cfg
「
security:
  authorization: enabled
」

db.auth("admin", "password")
show dbs

use test
db.createUser({
  user: "dev1",
  pwd: "password",
  roles: [{role: "readWrite", db: "test"}]
})
exit

mongo -u dev1 -p password -authenticationDatabase test
db



use admin
db.auth("admin", "password")
use test
db.createUser({
  user: "sato",
  pwd: "sato",
  roles: [{role: "readWrite", db: "test"}]
})
db.getUsers()


db.changeUserPassword("sato","password")
exit
mongo
use test
db.auth("sato", "password")
exit

use admin
db.auth("admin", "password")
use test
db.grantRolesToUser("sato", ["userAdmin"])
db.getUsers()
db.revokeRolesFromUser("sato", ["userAdmin"])
db.getUsers()

db.dropUser("sato")
db.getUsers()


use sample
db.getUsers()
db.createUser({
  user: "user",
  pwd: "user",
  roles: [{role: "readWrite", db: "sample"}]
})
db.getUsers()
db.auth({user: "user", pwd: "user"})


mongodump -u user -p user -d sample -o ./backup/yyyymmdd
db.products.drop()
db.products.find()
mongorestore -u user -p user --authenticationDatabase sample --nsInclude sample.* --drop ./backup/yyyymmdd/
show collections
db.products.find()


mongodump -u user -p user -d sample --gzip --archive=./backup/yyyymmdd.dump
db.products.drop()
db.products.find()
mongorestore -u user -p user --authenticationDatabase sample --nsInclude sample --drop --gzip --archive=./backup/yyyymmdd.dump 
show collections
db.products.find()
